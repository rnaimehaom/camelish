
group = 'im.camelish'
description = 'Camel tools for life sciences'

project.ext.set('camelVersion', '2.14.0')

allprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'maven'
    
    sourceCompatibility = 1.7
    version = '0.1-SNAPSHOT'

    repositories {
        mavenCentral()
        maven {
            url "http://maven.restlet.org"
        }
        maven {
            credentials {
                username "tdudgeon"
                password "tdudgeon"
            }
            url "https://repository.chemaxon.com/artifactory/libs-release"
        }
    }

    dependencies {
        
        
        compile "org.codehaus.groovy:groovy-all:2.2.2"

        compile "org.apache.camel:camel-core:$camelVersion"
        compile "org.apache.camel:camel-jdbc:$camelVersion"
        compile "org.apache.camel:camel-jetty:$camelVersion"
        compile "org.apache.camel:camel-http4:$camelVersion"
        compile "org.apache.camel:camel-restlet:$camelVersion"
        compile "org.apache.camel:camel-jackson:$camelVersion"
        //compile "org.apache.camel:camel-cxf:$camelVersion"
        //compile "org.apache.camel:camel-csv:$camelVersion"
        //compile "org.apache.camel:camel-groovy:$camelVersion"
        //compile "org.apache.camel:camel-script:$camelVersion"
        compile "org.slf4j:slf4j-simple:1.7.7"

        testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
    }
}

dependencies {
    
    compile "org.apache.derby:derby:10.10.1.1"
    compile "mysql:mysql-connector-java:5.1.13"
    compile "org.postgresql:postgresql:9.3-1102-jdbc41"
    compile "org.python:jython:2.7-b2"
    compile "org.apache.camel:camel-csv:$camelVersion"
    compile "org.apache.camel:camel-groovy:$camelVersion"
    compile "org.apache.camel:camel-script:$camelVersion"
    
    compile project(':core')
    compile project(':bioassay')
    compile project(':chemaxon')
    testCompile project(':core-test')
    
}

task groovyVersion << {
    println "Groovy version is ${GroovySystem.version}"
}


task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
    jarFile = 'wrapper/wrapper.jar'
}


task drugbankCreateTables(dependsOn: 'classes', type: JavaExec) {
    main = 'com.im.loaders.DrugbankLoader'
    args = ['createTables']
    classpath = sourceSets.main.runtimeClasspath
}

task drugbankDropTables(dependsOn: 'classes', type: JavaExec) {
    main = 'com.im.loaders.DrugbankLoader'
    args = ['dropTables']
    classpath = sourceSets.main.runtimeClasspath
}

task drugbankLoadData(dependsOn: 'classes', type: JavaExec) {
    main = 'com.im.loaders.DrugbankLoader'
    args = ['loadData']
    classpath = sourceSets.main.runtimeClasspath
}

task drugbankReload(dependsOn: 'classes', type: JavaExec) {
    main = 'com.im.loaders.DrugbankLoader'
    args = ['dropTables', 'createTables', 'loadData']
    classpath = sourceSets.main.runtimeClasspath
}


task molportCreateTables(dependsOn: 'classes', type: JavaExec) {
    main = 'com.im.loaders.MolportLoader'
    args = ['createTables']
    classpath = sourceSets.main.runtimeClasspath
}

task molportDropTables(dependsOn: 'classes', type: JavaExec) {
    main = 'com.im.loaders.MolportLoader'
    args = ['dropTables']
    classpath = sourceSets.main.runtimeClasspath
}

task molportLoadData(dependsOn: 'classes', type: JavaExec) {
    main = 'com.im.loaders.MolportLoader'
    args = ['loadData']
    classpath = sourceSets.main.runtimeClasspath
}


task emoleculesCreateTables(dependsOn: 'classes', type: JavaExec) {
    main = 'com.im.loaders.EMoleculesLoader'
    args = ['createTables']
    classpath = sourceSets.main.runtimeClasspath
}

task emoleculesDropTables(dependsOn: 'classes', type: JavaExec) {
    main = 'com.im.loaders.EMoleculesLoader'
    args = ['dropTables']
    classpath = sourceSets.main.runtimeClasspath
}

task emoleculesLoadData(dependsOn: 'classes', type: JavaExec) {
    main = 'com.im.loaders.EMoleculesLoader'
    args = ['loadData']
    classpath = sourceSets.main.runtimeClasspath
}

task emoleculesReload(dependsOn: 'classes', type: JavaExec) {
    main = 'com.im.loaders.EMoleculesLoader'
    args = ['dropTables', 'createTables', 'loadData']
    classpath = sourceSets.main.runtimeClasspath
}

task chemcentralCreate(dependsOn: 'classes', type: JavaExec) {
    main = 'com.im.loaders.ChemcentralCreate'
    args = ['dropTables', 'createTables']
    classpath = sourceSets.main.runtimeClasspath
}

task chemblETL(dependsOn: 'classes', type: JavaExec) {
    main = 'com.im.loaders.ChemblETL'
    classpath = sourceSets.main.runtimeClasspath
}

task drugbankETL(dependsOn: 'classes', type: JavaExec) {
    main = 'com.im.loaders.DrugBankETL'
    classpath = sourceSets.main.runtimeClasspath
}

task emoleculesETL(dependsOn: 'classes', type: JavaExec) {
    main = 'com.im.loaders.EMoleculesETL'
    classpath = sourceSets.main.runtimeClasspath
}

